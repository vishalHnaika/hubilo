!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/core"),require("rxjs/index"),require("rxjs/operators"),require("lodash"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/index","rxjs/operators","lodash","@angular/common"],factory):factory((global.ng=global.ng||{},global.ng.ng2CanvasWhiteboard=global.ng.ng2CanvasWhiteboard||{}),global.ng.core,global.rxjs_index,global.rxjs_operators,global.lodash,global.ng.common)}(this,function(exports,_angular_core,rxjs_index,rxjs_operators,lodash,_angular_common){"use strict";var __extends=function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),CanvasWhiteboardUpdateType={START:0,DRAG:1,STOP:2};CanvasWhiteboardUpdateType[CanvasWhiteboardUpdateType.START]="START",CanvasWhiteboardUpdateType[CanvasWhiteboardUpdateType.DRAG]="DRAG",CanvasWhiteboardUpdateType[CanvasWhiteboardUpdateType.STOP]="STOP";var CanvasWhiteboardUpdate=function(){function CanvasWhiteboardUpdate(x,y,type,UUID,selectedShape,selectedShapeOptions){this.x=x,this.y=y,this.type=type,this.UUID=UUID,this.selectedShape=selectedShape,this.selectedShapeOptions=selectedShapeOptions}return CanvasWhiteboardUpdate.deserializeJson=function(json){var parsedJson;try{return parsedJson=JSON.parse(json),new CanvasWhiteboardUpdate(parsedJson.x,parsedJson.y,parsedJson.type,parsedJson.uuid,parsedJson.selectedShape,parsedJson.selectedShapeOptions)}catch(e){return console.error("The canvas whiteboard update is not p1arseable"),null}},CanvasWhiteboardUpdate.prototype.stringify=function(){var objectToSerialize={x:this.x.toFixed(3),y:this.y.toFixed(3),type:this.type,uuid:this.UUID,selectedShape:this.selectedShape};return this.selectedShapeOptions&&(objectToSerialize.selectedShapeOptions=this.selectedShapeOptions),JSON.stringify(objectToSerialize)},CanvasWhiteboardUpdate}(),DEFAULT_STYLES="\n.canvas_whiteboard_button {\n    display: inline-block;\n    outline: 0px;\n    padding-top: 7px;\n    margin-bottom: 0;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n}\n\n.canvas_whiteboard_buttons { \n    z-index: 3;\n}\n\n@media (max-width: 400px) {\n     .canvas_whiteboard_buttons {\n            position: absolute;\n            z-inde\n            top: 0;\n            width: 100%;\n            text-align: center;\n      }\n}\n        \n@media (min-width: 401px) { \n    .canvas_whiteboard_buttons {\n        position: absolute;\n        right: 0%;\n        color: #fff;\n    }\n}\n\n.canvas_whiteboard_buttons {\n    padding: 5px;\n}\n\n.canvas_whiteboard_buttons > button {\n    margin: 5px;\n}\n\n.canvas_whiteboard_button-draw_animated {\n    -webkit-animation: pulsate 1s ease-out;\n    -webkit-animation-iteration-count: infinite;\n}\n\n@-webkit-keyframes pulsate {\n    0% {\n        -webkit-transform: scale(0.1, 0.1);\n        opacity: 0.0;\n    }\n    50% {\n        opacity: 1.0;\n    }\n    100% {\n        -webkit-transform: scale(1.2, 1.2);\n        opacity: 0.0;\n    }\n}\n.canvas_wrapper_div {\n    width: 100%;\n    height: 100%;\n    border: 0.5px solid #e2e2e2;\n}\n\n.canvas_whiteboard_button-clear {\n    padding-top: 5px;\n}\n\n.canvas_whiteboard {\n    position: absolute;\n    z-index: 1;\n}\n\n.incomplete_shapes_canvas_whiteboard {\n    position: absolute;\n    z-index: 2;\n}\n\n",CanvasWhiteboardService=function(){function CanvasWhiteboardService(){this._canvasDrawSubject=new rxjs_index.Subject,this.canvasDrawSubject$=this._canvasDrawSubject.asObservable(),this._canvasClearSubject=new rxjs_index.Subject,this.canvasClearSubject$=this._canvasClearSubject.asObservable(),this._canvasUndoSubject=new rxjs_index.Subject,this.canvasUndoSubject$=this._canvasUndoSubject.asObservable(),this._canvasRedoSubject=new rxjs_index.Subject,this.canvasRedoSubject$=this._canvasRedoSubject.asObservable()}return CanvasWhiteboardService.prototype.drawCanvas=function(updates){this._canvasDrawSubject.next(updates)},CanvasWhiteboardService.prototype.clearCanvas=function(){this._canvasClearSubject.next()},CanvasWhiteboardService.prototype.undoCanvas=function(updateUUD){this._canvasUndoSubject.next(updateUUD)},CanvasWhiteboardService.prototype.redoCanvas=function(updateUUD){this._canvasRedoSubject.next(updateUUD)},CanvasWhiteboardService}(),CanvasWhiteboardPoint=function(){function CanvasWhiteboardPoint(x,y){this.x=x,this.y=y}return CanvasWhiteboardPoint}(),CanvasWhiteboardShapeOptions=function(){function CanvasWhiteboardShapeOptions(){this.shouldFillShape=!1,this.fillStyle=null,this.strokeStyle="rgba(0,0,0,1)",this.lineWidth=2,this.lineJoin="round",this.lineCap="round"}return CanvasWhiteboardShapeOptions}(),CanvasWhiteboardShape=function(){function CanvasWhiteboardShape(positionPoint,options){this.positionPoint=positionPoint||new CanvasWhiteboardPoint(0,0),this.options=options||new CanvasWhiteboardShapeOptions,this.isVisible=!0}return CanvasWhiteboardShape.prototype.onStopReceived=function(update){},CanvasWhiteboardShape}(),CircleShape=function(_super){function CircleShape(positionPoint,options,radius){var _this=_super.call(this,positionPoint,options)||this;return _this.radius=radius||0,_this}return __extends(CircleShape,_super),CircleShape.prototype.getShapeName=function(){return"CircleShape"},CircleShape.prototype.draw=function(context){context.beginPath(),context.arc(this.positionPoint.x,this.positionPoint.y,this.radius,0,2*Math.PI,!1),Object.assign(context,this.options),context.stroke(),this.options.shouldFillShape&&context.fill(),context.closePath()},CircleShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(context.canvas.width/2,context.canvas.height/2),this.radius=this.calculateRadius(context.canvas.width-2,context.canvas.height/2),this.draw(context)},CircleShape.prototype.onUpdateReceived=function(update){this.radius=this.calculateRadius(update.x,update.y)},CircleShape.prototype.calculateRadius=function(x,y){return Math.sqrt(Math.pow(x-this.positionPoint.x,2)+Math.pow(y-this.positionPoint.y,2))},CircleShape}(CanvasWhiteboardShape),RectangleShape=function(_super){function RectangleShape(positionPoint,options,width,height){var _this=_super.call(this,positionPoint,options)||this;return _this.width=width||0,_this.height=height||0,_this}return __extends(RectangleShape,_super),RectangleShape.prototype.getShapeName=function(){return"RectangleShape"},RectangleShape.prototype.draw=function(context){this.width&&this.height&&(context.beginPath(),Object.assign(context,this.options),context.rect(this.positionPoint.x,this.positionPoint.y,this.width,this.height),context.stroke(),this.options.shouldFillShape&&context.fill(),context.closePath())},RectangleShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(2,2),this.width=context.canvas.width-4,this.height=context.canvas.height-4,this.draw(context)},RectangleShape.prototype.onUpdateReceived=function(update){this.width=update.x-this.positionPoint.x,this.height=update.y-this.positionPoint.y},RectangleShape}(CanvasWhiteboardShape),FreeHandShape=function(_super){function FreeHandShape(positionPoint,options){var _this=_super.call(this,positionPoint,options)||this;return _this.linePositions=[],_this}return __extends(FreeHandShape,_super),FreeHandShape.prototype.getShapeName=function(){return"FreeHandShape"},FreeHandShape.prototype.draw=function(context){Object.assign(context,this.options),context.beginPath(),context.moveTo(this.positionPoint.x,this.positionPoint.y),context.lineTo(this.positionPoint.x+1,this.positionPoint.y+1);for(var i=0;i<this.linePositions.length;)if(this.linePositions.length-i>2){var controlPoint1=this.linePositions[i],controlPoint2=this.linePositions[i+1],endPoint=this.linePositions[i+2];context.bezierCurveTo(controlPoint1.x,controlPoint1.y,controlPoint2.x,controlPoint2.y,endPoint.x,endPoint.y),i+=2}else{var linePosition=this.linePositions[i];context.lineTo(linePosition.x,linePosition.y),i+=1}context.stroke()},FreeHandShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(2,2),this.linePositions=[new CanvasWhiteboardPoint(context.canvas.width-5,.3*context.canvas.height),new CanvasWhiteboardPoint(.2*context.canvas.width,.4*context.canvas.height),new CanvasWhiteboardPoint(.6*context.canvas.width,.8*context.canvas.height),new CanvasWhiteboardPoint(context.canvas.width,context.canvas.height)],this.draw(context)},FreeHandShape.prototype.onUpdateReceived=function(update){this.linePositions.push(new CanvasWhiteboardPoint(update.x,update.y))},FreeHandShape}(CanvasWhiteboardShape),SmileyShape=function(_super){function SmileyShape(positionPoint,options,radius){var _this=_super.call(this,positionPoint,options)||this;return _this.options.shouldFillShape=!0,_this.options.fillStyle=_this.options.fillStyle||"yellow",_this.radius=radius||0,_this}return __extends(SmileyShape,_super),SmileyShape.prototype.getShapeName=function(){return"SmileyShape"},SmileyShape.prototype.draw=function(context){context.beginPath(),Object.assign(context,this.options),context.arc(this.positionPoint.x,this.positionPoint.y,this.radius,0,2*Math.PI,!1),context.fill(),context.stroke(),context.beginPath();var leftEyeX=this.positionPoint.x-.3*this.radius,rightEyeX=this.positionPoint.x+.3*this.radius,eyesY=this.positionPoint.y-.2*this.radius,eyeSize=.1*this.radius;context.arc(leftEyeX,eyesY,eyeSize,0,2*Math.PI,!1),context.arc(rightEyeX,eyesY,eyeSize,0,2*Math.PI,!1),context.fillStyle=this.options.strokeStyle,context.fill(),context.beginPath(),context.arc(this.positionPoint.x,this.positionPoint.y,.7*this.radius,0,Math.PI,!1),context.stroke(),context.closePath()},SmileyShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(context.canvas.width/2,context.canvas.height/2),this.radius=this.calculateRadius(context.canvas.width-2,context.canvas.height/2),this.draw(context)},SmileyShape.prototype.onUpdateReceived=function(update){this.radius=this.calculateRadius(update.x,update.y)},SmileyShape.prototype.calculateRadius=function(x,y){return Math.sqrt(Math.pow(x-this.positionPoint.x,2)+Math.pow(y-this.positionPoint.y,2))},SmileyShape}(CanvasWhiteboardShape),StarShape=function(_super){function StarShape(positionPoint,options,radius,spikes){var _this=_super.call(this,positionPoint,options)||this;return _this.radius=radius||0,_this.spikes=spikes||5,_this}return __extends(StarShape,_super),StarShape.prototype.getShapeName=function(){return"StarShape"},StarShape.prototype.draw=function(context){Object.assign(context,this.options);var rotation=Math.PI/2*3,spikeX=this.positionPoint.x,spikeY=this.positionPoint.y,step=Math.PI/this.spikes;context.beginPath(),context.moveTo(this.positionPoint.x,this.positionPoint.y-this.radius);for(var i=0;i<this.spikes;i++)spikeX=this.positionPoint.x+Math.cos(rotation)*this.radius,spikeY=this.positionPoint.y+Math.sin(rotation)*this.radius,context.lineTo(spikeX,spikeY),rotation+=step,spikeX=this.positionPoint.x+Math.cos(rotation)*(.4*this.radius),spikeY=this.positionPoint.y+Math.sin(rotation)*(.4*this.radius),context.lineTo(spikeX,spikeY),rotation+=step,context.stroke();context.lineTo(this.positionPoint.x,this.positionPoint.y-this.radius),context.closePath(),context.stroke(),this.options.shouldFillShape&&context.fill()},StarShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(context.canvas.width/2,context.canvas.height/2),this.radius=this.calculateRadius(context.canvas.width-2,context.canvas.height/2),this.draw(context)},StarShape.prototype.onUpdateReceived=function(update){this.radius=this.calculateRadius(update.x,update.y)},StarShape.prototype.calculateRadius=function(x,y){return Math.sqrt(Math.pow(x-this.positionPoint.x,2)+Math.pow(y-this.positionPoint.y,2))},StarShape}(CanvasWhiteboardShape),LineShape=function(_super){function LineShape(positionPoint,options,endPosition){var _this=_super.call(this,positionPoint,options)||this;return _this.endPosition=endPosition||new CanvasWhiteboardPoint(_this.positionPoint.x,_this.positionPoint.y),_this}return __extends(LineShape,_super),LineShape.prototype.getShapeName=function(){return"LineShape"},LineShape.prototype.draw=function(context){this.endPosition&&(context.beginPath(),Object.assign(context,this.options),context.moveTo(this.positionPoint.x,this.positionPoint.y),context.lineTo(this.endPosition.x,this.endPosition.y),context.closePath(),context.stroke())},LineShape.prototype.drawPreview=function(context){this.positionPoint=new CanvasWhiteboardPoint(0,0),this.endPosition=new CanvasWhiteboardPoint(context.canvas.width,context.canvas.height),this.draw(context)},LineShape.prototype.onUpdateReceived=function(update){this.endPosition=new CanvasWhiteboardPoint(update.x,update.y)},LineShape}(CanvasWhiteboardShape),CanvasWhiteboardShapeService=function(){function CanvasWhiteboardShapeService(){this._registeredShapesSubject=new rxjs_index.BehaviorSubject([FreeHandShape,LineShape,RectangleShape,CircleShape,StarShape,SmileyShape]),this.registeredShapes$=this._registeredShapesSubject.asObservable()}return CanvasWhiteboardShapeService.prototype.getShapeConstructorFromShapeName=function(shapeName){return this.getCurrentRegisteredShapes().find(function(shape){return(new shape).getShapeName()===shapeName})},CanvasWhiteboardShapeService.prototype.getCurrentRegisteredShapes=function(){return this._registeredShapesSubject.getValue()},CanvasWhiteboardShapeService.prototype.isRegisteredShape=function(shape){return-1!==this.getCurrentRegisteredShapes().indexOf(shape)},CanvasWhiteboardShapeService.prototype.registerShape=function(shape){if(this.isRegisteredShape(shape))return void console.warn("You tried to register a shape:"+shape+", but is has already been registered.");var registeredShapes=this.getCurrentRegisteredShapes();registeredShapes.push(shape),this._registeredShapesSubject.next(registeredShapes)},CanvasWhiteboardShapeService.prototype.registerShapes=function(shapes){var _this=this;this._registeredShapesSubject.next(this.getCurrentRegisteredShapes().concat(shapes.filter(function(shape){return!_this.isRegisteredShape(shape)||(console.warn("You tried to register a shape:"+shape+", but is has already been registered."),!1)})))},CanvasWhiteboardShapeService.prototype.unregisterShape=function(shape){this._registeredShapesSubject.next(this.getCurrentRegisteredShapes().filter(function(registeredShape){return registeredShape!==shape}))},CanvasWhiteboardShapeService.prototype.unregisterShapes=function(shapes){this._registeredShapesSubject.next(this.getCurrentRegisteredShapes().filter(function(shape){return-1===shapes.indexOf(shape)}))},CanvasWhiteboardShapeService}();CanvasWhiteboardShapeService.decorators=[{type:_angular_core.Injectable}],CanvasWhiteboardShapeService.ctorParameters=function(){return[]};var CanvasWhiteboardComponent=function(){function CanvasWhiteboardComponent(ngZone,_changeDetector,_canvasWhiteboardService,_canvasWhiteboardShapeService){this.ngZone=ngZone,this._changeDetector=_changeDetector,this._canvasWhiteboardService=_canvasWhiteboardService,this._canvasWhiteboardShapeService=_canvasWhiteboardShapeService,this.batchUpdateTimeoutDuration=100,this.drawButtonText="",this.clearButtonText="",this.undoButtonText="",this.redoButtonText="",this.saveDataButtonText="",this.drawButtonEnabled=!0,this.clearButtonEnabled=!0,this.undoButtonEnabled=!1,this.redoButtonEnabled=!1,this.saveDataButtonEnabled=!1,this.shouldDownloadDrawing=!0,this.colorPickerEnabled=!1,this.lineWidth=2,this.strokeColor="rgba(0, 0, 0, 1)",this.startingColor="#fff",this.scaleFactor=0,this.drawingEnabled=!1,this.showStrokeColorPicker=!1,this.showFillColorPicker=!1,this.lineJoin="round",this.lineCap="round",this.shapeSelectorEnabled=!0,this.showShapeSelector=!1,this.fillColor="rgba(0,0,0,0)",this.onClear=new _angular_core.EventEmitter,this.onUndo=new _angular_core.EventEmitter,this.onRedo=new _angular_core.EventEmitter,this.onBatchUpdate=new _angular_core.EventEmitter,this.onImageLoaded=new _angular_core.EventEmitter,this.onSave=new _angular_core.EventEmitter,this._canDraw=!0,this._clientDragging=!1,this._updateHistory=[],this._undoStack=[],this._redoStack=[],this._batchUpdates=[],this._updatesNotDrawn=[],this._canvasWhiteboardServiceSubscriptions=[],this._shapesMap=new Map,this._incompleteShapesMap=new Map,this.canvasWhiteboardShapePreviewOptions=this.generateShapePreviewOptions()}return Object.defineProperty(CanvasWhiteboardComponent.prototype,"imageUrl",{get:function(){return this._imageUrl},set:function(imageUrl){this._imageUrl=imageUrl,this._imageElement=null,this._redrawHistory()},enumerable:!0,configurable:!0}),CanvasWhiteboardComponent.prototype.ngOnInit=function(){this._initInputsFromOptions(this.options),this._initCanvasEventListeners(),this._initCanvasServiceObservables(),this.context=this.canvas.nativeElement.getContext("2d"),this._incompleteShapesCanvasContext=this._incompleteShapesCanvas.nativeElement.getContext("2d")},CanvasWhiteboardComponent.prototype.ngOnChanges=function(changes){changes.options&&changes.options.currentValue!=changes.options.previousValue&&this._initInputsFromOptions(changes.options.currentValue)},CanvasWhiteboardComponent.prototype.ngAfterViewInit=function(){this._calculateCanvasWidthAndHeight(),this._redrawHistory()},CanvasWhiteboardComponent.prototype._initInputsFromOptions=function(options){options&&(this._isNullOrUndefined(options.batchUpdateTimeoutDuration)||(this.batchUpdateTimeoutDuration=options.batchUpdateTimeoutDuration),this._isNullOrUndefined(options.imageUrl)||(this.imageUrl=options.imageUrl),this._isNullOrUndefined(options.aspectRatio)||(this.aspectRatio=options.aspectRatio),this._isNullOrUndefined(options.drawButtonClass)||(this.drawButtonClass=options.drawButtonClass),this._isNullOrUndefined(options.clearButtonClass)||(this.clearButtonClass=options.clearButtonClass),this._isNullOrUndefined(options.undoButtonClass)||(this.undoButtonClass=options.undoButtonClass),this._isNullOrUndefined(options.redoButtonClass)||(this.redoButtonClass=options.redoButtonClass),this._isNullOrUndefined(options.saveDataButtonClass)||(this.saveDataButtonClass=options.saveDataButtonClass),this._isNullOrUndefined(options.drawButtonText)||(this.drawButtonText=options.drawButtonText),this._isNullOrUndefined(options.clearButtonText)||(this.clearButtonText=options.clearButtonText),this._isNullOrUndefined(options.undoButtonText)||(this.undoButtonText=options.undoButtonText),this._isNullOrUndefined(options.redoButtonText)||(this.redoButtonText=options.redoButtonText),this._isNullOrUndefined(options.saveDataButtonText)||(this.saveDataButtonText=options.saveDataButtonText),this._isNullOrUndefined(options.drawButtonEnabled)||(this.drawButtonEnabled=options.drawButtonEnabled),this._isNullOrUndefined(options.clearButtonEnabled)||(this.clearButtonEnabled=options.clearButtonEnabled),this._isNullOrUndefined(options.undoButtonEnabled)||(this.undoButtonEnabled=options.undoButtonEnabled),this._isNullOrUndefined(options.redoButtonEnabled)||(this.redoButtonEnabled=options.redoButtonEnabled),this._isNullOrUndefined(options.saveDataButtonEnabled)||(this.saveDataButtonEnabled=options.saveDataButtonEnabled),this._isNullOrUndefined(options.colorPickerEnabled)||(this.colorPickerEnabled=options.colorPickerEnabled),this._isNullOrUndefined(options.lineWidth)||(this.lineWidth=options.lineWidth),this._isNullOrUndefined(options.strokeColor)||(this.strokeColor=options.strokeColor),this._isNullOrUndefined(options.shouldDownloadDrawing)||(this.shouldDownloadDrawing=options.shouldDownloadDrawing),this._isNullOrUndefined(options.startingColor)||(this.startingColor=options.startingColor),this._isNullOrUndefined(options.scaleFactor)||(this.scaleFactor=options.scaleFactor),this._isNullOrUndefined(options.drawingEnabled)||(this.drawingEnabled=options.drawingEnabled),this._isNullOrUndefined(options.downloadedFileName)||(this.downloadedFileName=options.downloadedFileName),this._isNullOrUndefined(options.lineJoin)||(this.lineJoin=options.lineJoin),this._isNullOrUndefined(options.lineCap)||(this.lineCap=options.lineCap),this._isNullOrUndefined(options.shapeSelectorEnabled)||(this.shapeSelectorEnabled=options.shapeSelectorEnabled),this._isNullOrUndefined(options.showShapeSelector)||(this.showShapeSelector=options.showShapeSelector),this._isNullOrUndefined(options.fillColor)||(this.fillColor=options.fillColor),this._isNullOrUndefined(options.showStrokeColorPicker)||(this.showStrokeColorPicker=options.showStrokeColorPicker),this._isNullOrUndefined(options.showFillColorPicker)||(this.showFillColorPicker=options.showFillColorPicker))},CanvasWhiteboardComponent.prototype._isNullOrUndefined=function(property){return null===property||void 0===property},CanvasWhiteboardComponent.prototype._initCanvasEventListeners=function(){var _this=this;this.ngZone.runOutsideAngular(function(){_this._resizeSubscription=rxjs_index.fromEvent(window,"resize").pipe(rxjs_operators.debounceTime(200),rxjs_operators.distinctUntilChanged()).subscribe(function(){_this.ngZone.run(function(){_this._redrawCanvasOnResize()})})}),window.addEventListener("keydown",this._canvasKeyDown.bind(this),!1)},CanvasWhiteboardComponent.prototype._initCanvasServiceObservables=function(){var _this=this;this._canvasWhiteboardServiceSubscriptions.push(this._canvasWhiteboardService.canvasDrawSubject$.subscribe(function(updates){return _this.drawUpdates(updates)})),this._canvasWhiteboardServiceSubscriptions.push(this._canvasWhiteboardService.canvasClearSubject$.subscribe(function(){return _this.clearCanvas()})),this._canvasWhiteboardServiceSubscriptions.push(this._canvasWhiteboardService.canvasUndoSubject$.subscribe(function(updateUUD){return _this._undoCanvas(updateUUD)})),this._canvasWhiteboardServiceSubscriptions.push(this._canvasWhiteboardService.canvasRedoSubject$.subscribe(function(updateUUD){return _this._redoCanvas(updateUUD)})),this._registeredShapesSubscription=this._canvasWhiteboardShapeService.registeredShapes$.subscribe(function(shapes){_this.selectedShapeConstructor&&_this._canvasWhiteboardShapeService.isRegisteredShape(_this.selectedShapeConstructor)||(_this.selectedShapeConstructor=shapes[0])})},CanvasWhiteboardComponent.prototype._calculateCanvasWidthAndHeight=function(){this.context.canvas.width=this.canvas.nativeElement.parentNode.clientWidth,this.aspectRatio?this.context.canvas.height=this.canvas.nativeElement.parentNode.clientWidth*this.aspectRatio:this.context.canvas.height=this.canvas.nativeElement.parentNode.clientHeight,this._incompleteShapesCanvasContext.canvas.width=this.context.canvas.width,this._incompleteShapesCanvasContext.canvas.height=this.context.canvas.height},CanvasWhiteboardComponent.prototype._loadImage=function(callbackFn){var _this=this;if(this._canDraw=!1,this._imageElement)return this._canDraw=!0,void(callbackFn&&callbackFn());this._imageElement=new Image,this._imageElement.addEventListener("load",function(){_this._canDraw=!0,callbackFn&&callbackFn(),_this.onImageLoaded.emit(!0)}),this._imageElement.src=this.imageUrl},CanvasWhiteboardComponent.prototype.clearCanvasLocal=function(){this.clearCanvas(),this.onClear.emit(!0)},CanvasWhiteboardComponent.prototype.clearCanvas=function(){this._removeCanvasData(),this._redoStack=[]},CanvasWhiteboardComponent.prototype._removeCanvasData=function(callbackFn){this._shapesMap=new Map,this._clientDragging=!1,this._updateHistory=[],this._undoStack=[],this._redrawBackground(callbackFn)},CanvasWhiteboardComponent.prototype._redrawBackground=function(callbackFn){var _this=this;this.context&&(this.imageUrl?this._loadImage(function(){_this.context.save(),_this._drawImage(_this.context,_this._imageElement,0,0,_this.context.canvas.width,_this.context.canvas.height,.5,.5),_this.context.restore(),_this._drawMissingUpdates(),callbackFn&&callbackFn()}):(this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),this._drawStartingColor(),callbackFn&&callbackFn()))},CanvasWhiteboardComponent.prototype._drawStartingColor=function(){var previousFillStyle=this.context.fillStyle;this.context.save(),this.context.fillStyle=this.startingColor,this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.fillStyle=previousFillStyle,this.context.restore()},CanvasWhiteboardComponent.prototype.getShouldDraw=function(){return this.getDrawingEnabled()},CanvasWhiteboardComponent.prototype.getDrawingEnabled=function(){return this.drawingEnabled},CanvasWhiteboardComponent.prototype.toggleDrawingEnabled=function(){this.drawingEnabled=!this.drawingEnabled},CanvasWhiteboardComponent.prototype.setDrawingEnabled=function(drawingEnabled){this.drawingEnabled=drawingEnabled},CanvasWhiteboardComponent.prototype.changeColor=function(newStrokeColor){this.changeStrokeColor(newStrokeColor)},CanvasWhiteboardComponent.prototype.changeStrokeColor=function(newStrokeColor){this.strokeColor=newStrokeColor,this.canvasWhiteboardShapePreviewOptions=this.generateShapePreviewOptions(),this._changeDetector.detectChanges()},CanvasWhiteboardComponent.prototype.changeFillColor=function(newFillColor){this.fillColor=newFillColor,this.canvasWhiteboardShapePreviewOptions=this.generateShapePreviewOptions(),this._changeDetector.detectChanges()},CanvasWhiteboardComponent.prototype.undoLocal=function(){var _this=this;this.undo(function(updateUUID){_this._redoStack.push(updateUUID),_this.onUndo.emit(updateUUID)})},CanvasWhiteboardComponent.prototype.undo=function(callbackFn){if(this._undoStack.length){var updateUUID=this._undoStack.pop();this._undoCanvas(updateUUID),callbackFn&&callbackFn(updateUUID)}},CanvasWhiteboardComponent.prototype._undoCanvas=function(updateUUID){if(this._shapesMap.has(updateUUID)){this._shapesMap.get(updateUUID).isVisible=!1,this.drawAllShapes()}},CanvasWhiteboardComponent.prototype.redoLocal=function(){var _this=this;this.redo(function(updateUUID){_this._undoStack.push(updateUUID),_this.onRedo.emit(updateUUID)})},CanvasWhiteboardComponent.prototype.redo=function(callbackFn){if(this._redoStack.length){var updateUUID=this._redoStack.pop();this._redoCanvas(updateUUID),callbackFn&&callbackFn(updateUUID)}},CanvasWhiteboardComponent.prototype._redoCanvas=function(updateUUID){if(this._shapesMap.has(updateUUID)){this._shapesMap.get(updateUUID).isVisible=!0,this.drawAllShapes()}},CanvasWhiteboardComponent.prototype.canvasUserEvents=function(event){if(this.drawingEnabled&&this._canDraw&&(this._clientDragging||"mousemove"!==event.type&&"touchmove"!==event.type&&"mouseout"!==event.type&&"touchcancel"!==event.type&&"mouseup"!==event.type&&"touchend"!==event.type&&"mouseout"!==event.type)){event.target!=this._incompleteShapesCanvas.nativeElement&&event.target!=this.canvas.nativeElement||event.preventDefault();var update,updateType,eventPosition=this._getCanvasEventPosition(event);switch(update=new CanvasWhiteboardUpdate(eventPosition.x,eventPosition.y),event.type){case"mousedown":case"touchstart":this._clientDragging=!0,this._lastUUID=this._generateUUID(),updateType=CanvasWhiteboardUpdateType.START,this._redoStack=[],this._addCurrentShapeDataToAnUpdate(update);break;case"mousemove":case"touchmove":if(!this._clientDragging)return;updateType=CanvasWhiteboardUpdateType.DRAG;break;case"touchcancel":case"mouseup":case"touchend":case"mouseout":this._clientDragging=!1,updateType=CanvasWhiteboardUpdateType.STOP,this._undoStack.push(this._lastUUID)}update.UUID=this._lastUUID,update.type=updateType,this._draw(update),this._prepareToSendUpdate(update)}},CanvasWhiteboardComponent.prototype._getCanvasEventPosition=function(eventData){var canvasBoundingRect=this.context.canvas.getBoundingClientRect(),hasTouches=eventData.touches&&eventData.touches.length?eventData.touches[0]:null;hasTouches||(hasTouches=eventData.changedTouches&&eventData.changedTouches.length?eventData.changedTouches[0]:null);var event=hasTouches||eventData,scaleWidth=canvasBoundingRect.width/this.context.canvas.width,scaleHeight=canvasBoundingRect.height/this.context.canvas.height,xPosition=event.clientX-canvasBoundingRect.left,yPosition=event.clientY-canvasBoundingRect.top;return xPosition/=this.scaleFactor?this.scaleFactor:scaleWidth,yPosition/=this.scaleFactor?this.scaleFactor:scaleHeight,new CanvasWhiteboardPoint(xPosition/this.context.canvas.width,yPosition/this.context.canvas.height)},CanvasWhiteboardComponent.prototype._prepareToSendUpdate=function(update){this._prepareUpdateForBatchDispatch(update)},CanvasWhiteboardComponent.prototype._canvasKeyDown=function(event){(event.ctrlKey||event.metaKey)&&(90===event.keyCode&&this.undoButtonEnabled&&(event.preventDefault(),this.undo()),89===event.keyCode&&this.redoButtonEnabled&&(event.preventDefault(),this.redo()),83!==event.keyCode&&115!==event.keyCode||(event.preventDefault(),this.saveLocal()))},CanvasWhiteboardComponent.prototype._redrawCanvasOnResize=function(){this._calculateCanvasWidthAndHeight(),this._redrawHistory()},CanvasWhiteboardComponent.prototype._redrawHistory=function(){var _this=this,updatesToDraw=[].concat(this._updateHistory);this._removeCanvasData(function(){updatesToDraw.forEach(function(update){_this._draw(update)})})},CanvasWhiteboardComponent.prototype._draw=function(update){if(this._updateHistory.push(update),update=Object.assign(new CanvasWhiteboardUpdate,update,{x:update.x*this.context.canvas.width,y:update.y*this.context.canvas.height}),update.type===CanvasWhiteboardUpdateType.START){var updateShapeConstructor=this._canvasWhiteboardShapeService.getShapeConstructorFromShapeName(update.selectedShape),shape=new updateShapeConstructor(new CanvasWhiteboardPoint(update.x,update.y),Object.assign(new CanvasWhiteboardShapeOptions,update.selectedShapeOptions));this._incompleteShapesMap.set(update.UUID,shape),this._drawIncompleteShapes()}else if(update.type===CanvasWhiteboardUpdateType.DRAG){var shape=this._incompleteShapesMap.get(update.UUID);shape&&shape.onUpdateReceived(update),this._drawIncompleteShapes()}else if(CanvasWhiteboardUpdateType.STOP){var shape=this._incompleteShapesMap.get(update.UUID);shape&&shape.onStopReceived(update),this._shapesMap.set(update.UUID,shape),this._incompleteShapesMap.delete(update.UUID),this._swapCompletedShapeToActualCanvas(shape)}},CanvasWhiteboardComponent.prototype._drawIncompleteShapes=function(){var _this=this;this._resetIncompleteShapeCanvas(),this._incompleteShapesMap.forEach(function(shape){shape.isVisible&&shape.draw(_this._incompleteShapesCanvasContext)})},CanvasWhiteboardComponent.prototype._swapCompletedShapeToActualCanvas=function(shape){this._drawIncompleteShapes(),shape.isVisible&&shape.draw(this.context)},CanvasWhiteboardComponent.prototype._resetIncompleteShapeCanvas=function(){this._incompleteShapesCanvasContext.clearRect(0,0,this._incompleteShapesCanvasContext.canvas.width,this._incompleteShapesCanvasContext.canvas.height),this._incompleteShapesCanvasContext.fillStyle="transparent",this._incompleteShapesCanvasContext.fillRect(0,0,this._incompleteShapesCanvasContext.canvas.width,this._incompleteShapesCanvasContext.canvas.height)},CanvasWhiteboardComponent.prototype.drawAllShapes=function(){var _this=this;this._redrawBackground(function(){_this._shapesMap.forEach(function(shape){shape.isVisible&&shape.draw(_this.context)})})},CanvasWhiteboardComponent.prototype._addCurrentShapeDataToAnUpdate=function(update){
update.selectedShape||(update.selectedShape=(new this.selectedShapeConstructor).getShapeName()),update.selectedShapeOptions||(update.selectedShapeOptions=Object.assign(new CanvasWhiteboardShapeOptions,this.generateShapePreviewOptions(),{lineWidth:this.lineWidth}))},CanvasWhiteboardComponent.prototype.generateShapePreviewOptions=function(){return Object.assign(new CanvasWhiteboardShapeOptions,{shouldFillShape:!!this.fillColor,fillStyle:this.fillColor,strokeStyle:this.strokeColor,lineWidth:2,lineJoin:this.lineJoin,lineCap:this.lineCap})},CanvasWhiteboardComponent.prototype._prepareUpdateForBatchDispatch=function(update){var _this=this;this._batchUpdates.push(lodash.cloneDeep(update)),this._updateTimeout||(this._updateTimeout=setTimeout(function(){_this.onBatchUpdate.emit(_this._batchUpdates),_this._batchUpdates=[],_this._updateTimeout=null},this.batchUpdateTimeoutDuration))},CanvasWhiteboardComponent.prototype.drawUpdates=function(updates){var _this=this;this._canDraw?(this._drawMissingUpdates(),updates.forEach(function(update){_this._draw(update)})):this._updatesNotDrawn=this._updatesNotDrawn.concat(updates)},CanvasWhiteboardComponent.prototype._drawMissingUpdates=function(){var _this=this;if(this._updatesNotDrawn.length>0){var updatesToDraw=this._updatesNotDrawn;this._updatesNotDrawn=[],updatesToDraw.forEach(function(update){_this._draw(update)})}},CanvasWhiteboardComponent.prototype._drawImage=function(context,image,x,y,width,height,offsetX,offsetY){2===arguments.length&&(x=y=0,width=context.canvas.width,height=context.canvas.height),offsetX="number"==typeof offsetX?offsetX:.5,offsetY="number"==typeof offsetY?offsetY:.5,offsetX<0&&(offsetX=0),offsetY<0&&(offsetY=0),offsetX>1&&(offsetX=1),offsetY>1&&(offsetY=1);var finalDrawX,finalDrawY,finalDrawWidth,finalDrawHeight,imageWidth=image.width,imageHeight=image.height,radius=Math.min(width/imageWidth,height/imageHeight),newWidth=imageWidth*radius,newHeight=imageHeight*radius,aspectRatio=1;newWidth<width&&(aspectRatio=width/newWidth),Math.abs(aspectRatio-1)<1e-14&&newHeight<height&&(aspectRatio=height/newHeight),newWidth*=aspectRatio,newHeight*=aspectRatio,finalDrawWidth=imageWidth/(newWidth/width),finalDrawHeight=imageHeight/(newHeight/height),finalDrawX=(imageWidth-finalDrawWidth)*offsetX,finalDrawY=(imageHeight-finalDrawHeight)*offsetY,finalDrawX<0&&(finalDrawX=0),finalDrawY<0&&(finalDrawY=0),finalDrawWidth>imageWidth&&(finalDrawWidth=imageWidth),finalDrawHeight>imageHeight&&(finalDrawHeight=imageHeight),context.drawImage(image,finalDrawX,finalDrawY,finalDrawWidth,finalDrawHeight,x,y,width,height)},CanvasWhiteboardComponent.prototype.generateCanvasDataUrl=function(returnedDataType,returnedDataQuality){return void 0===returnedDataType&&(returnedDataType="image/png"),void 0===returnedDataQuality&&(returnedDataQuality=1),this.context.canvas.toDataURL(returnedDataType,returnedDataQuality)},CanvasWhiteboardComponent.prototype.generateCanvasBlob=function(callbackFn,returnedDataType,returnedDataQuality){var _this=this;void 0===returnedDataType&&(returnedDataType="image/png"),void 0===returnedDataQuality&&(returnedDataQuality=1);var toBlobMethod;void 0!==this.context.canvas.toBlob?toBlobMethod=this.context.canvas.toBlob.bind(this.context.canvas):void 0!==this.context.canvas.msToBlob&&(toBlobMethod=function(callback){callback&&callback(_this.context.canvas.msToBlob())}),toBlobMethod&&toBlobMethod(function(blob){callbackFn&&callbackFn(blob,returnedDataType)},returnedDataType,returnedDataQuality)},CanvasWhiteboardComponent.prototype.downloadCanvasImage=function(returnedDataType,downloadData,customFileName){if(void 0===returnedDataType&&(returnedDataType="image/png"),void 0===window.navigator.msSaveOrOpenBlob){var downloadLink=document.createElement("a");downloadLink.setAttribute("href",downloadData||this.generateCanvasDataUrl(returnedDataType));var fileName=customFileName||(this.downloadedFileName?this.downloadedFileName:"canvas_drawing_"+(new Date).valueOf());downloadLink.setAttribute("download",fileName+this._generateDataTypeString(returnedDataType)),document.body.appendChild(downloadLink),downloadLink.click(),document.body.removeChild(downloadLink)}else downloadData?this._saveCanvasBlob(downloadData,returnedDataType):this.generateCanvasBlob(this._saveCanvasBlob.bind(this),returnedDataType)},CanvasWhiteboardComponent.prototype._saveCanvasBlob=function(blob,returnedDataType){void 0===returnedDataType&&(returnedDataType="image/png"),window.navigator.msSaveOrOpenBlob(blob,"canvas_drawing_"+(new Date).valueOf()+this._generateDataTypeString(returnedDataType))},CanvasWhiteboardComponent.prototype.generateCanvasData=function(callback,returnedDataType,returnedDataQuality){void 0===returnedDataType&&(returnedDataType="image/png"),void 0===returnedDataQuality&&(returnedDataQuality=1),void 0===window.navigator.msSaveOrOpenBlob?callback&&callback(this.generateCanvasDataUrl(returnedDataType,returnedDataQuality)):this.generateCanvasBlob(callback,returnedDataType,returnedDataQuality)},CanvasWhiteboardComponent.prototype.saveLocal=function(returnedDataType){var _this=this;void 0===returnedDataType&&(returnedDataType="image/png"),this.generateCanvasData(function(generatedData){_this.onSave.emit(generatedData),_this.shouldDownloadDrawing&&_this.downloadCanvasImage(returnedDataType,generatedData)})},CanvasWhiteboardComponent.prototype._generateDataTypeString=function(returnedDataType){return returnedDataType?"."+returnedDataType.split("/")[1]:""},CanvasWhiteboardComponent.prototype.toggleStrokeColorPicker=function(value){this.showStrokeColorPicker=this._isNullOrUndefined(value)?!this.showStrokeColorPicker:value},CanvasWhiteboardComponent.prototype.toggleFillColorPicker=function(value){this.showFillColorPicker=this._isNullOrUndefined(value)?!this.showFillColorPicker:value},CanvasWhiteboardComponent.prototype.toggleShapeSelector=function(value){this.showShapeSelector=this._isNullOrUndefined(value)?!this.showShapeSelector:value},CanvasWhiteboardComponent.prototype.selectShape=function(newShapeBlueprint){this.selectedShapeConstructor=newShapeBlueprint},CanvasWhiteboardComponent.prototype.getDrawingHistory=function(){return lodash.cloneDeep(this._updateHistory)},CanvasWhiteboardComponent.prototype._unsubscribe=function(subscription){subscription&&subscription.unsubscribe()},CanvasWhiteboardComponent.prototype._generateUUID=function(){return this._random4()+this._random4()+"-"+this._random4()+"-"+this._random4()+"-"+this._random4()+"-"+this._random4()+this._random4()+this._random4()},CanvasWhiteboardComponent.prototype._random4=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)},CanvasWhiteboardComponent.prototype.ngOnDestroy=function(){var _this=this;this._unsubscribe(this._resizeSubscription),this._unsubscribe(this._registeredShapesSubscription),this._canvasWhiteboardServiceSubscriptions.forEach(function(subscription){return _this._unsubscribe(subscription)})},CanvasWhiteboardComponent}();CanvasWhiteboardComponent.decorators=[{type:_angular_core.Component,args:[{selector:"canvas-whiteboard",template:'\n        <div class="canvas_wrapper_div">\n            <div class="canvas_whiteboard_buttons">\n                <canvas-whiteboard-shape-selector *ngIf="shapeSelectorEnabled"\n                                                  [showShapeSelector]="showShapeSelector"\n                                                  [selectedShapeConstructor]="selectedShapeConstructor"\n                                                  [shapeOptions]="generateShapePreviewOptions()"\n                                                  (onToggleShapeSelector)="toggleShapeSelector($event)"\n                                                  (onShapeSelected)="selectShape($event)"></canvas-whiteboard-shape-selector>\n\n                <canvas-whiteboard-colorpicker *ngIf="colorPickerEnabled"\n                                               [previewText]="\'Fill\'"\n                                               [showColorPicker]="showFillColorPicker"\n                                               [selectedColor]="fillColor"\n                                               (onToggleColorPicker)="toggleFillColorPicker($event)"\n                                               (onColorSelected)="changeFillColor($event)">\n                </canvas-whiteboard-colorpicker>\n\n                <canvas-whiteboard-colorpicker *ngIf="colorPickerEnabled"\n                                               [previewText]="\'Stroke\'"\n                                               [showColorPicker]="showStrokeColorPicker"\n                                               [selectedColor]="strokeColor"\n                                               (onToggleColorPicker)="toggleStrokeColorPicker($event)"\n                                               (onColorSelected)="changeStrokeColor($event)">\n                </canvas-whiteboard-colorpicker>\n\n\n                <button *ngIf="drawButtonEnabled" (click)="toggleDrawingEnabled()"\n                        [class.canvas_whiteboard_button-draw_animated]="getDrawingEnabled()"\n                        class="canvas_whiteboard_button canvas_whiteboard_button-draw" type="button">\n                    <i [class]="drawButtonClass" aria-hidden="true"></i> {{drawButtonText}}\n                </button>\n\n                <button *ngIf="clearButtonEnabled" (click)="clearCanvasLocal()" type="button"\n                        class="canvas_whiteboard_button canvas_whiteboard_button-clear">\n                    <i [class]="clearButtonClass" aria-hidden="true"></i> {{clearButtonText}}\n                </button>\n\n                <button *ngIf="undoButtonEnabled" (click)="undoLocal()" type="button"\n                        class="canvas_whiteboard_button canvas_whiteboard_button-undo">\n                    <i [class]="undoButtonClass" aria-hidden="true"></i> {{undoButtonText}}\n                </button>\n\n                <button *ngIf="redoButtonEnabled" (click)="redoLocal()" type="button"\n                        class="canvas_whiteboard_button canvas_whiteboard_button-redo">\n                    <i [class]="redoButtonClass" aria-hidden="true"></i> {{redoButtonText}}\n                </button>\n                <button *ngIf="saveDataButtonEnabled" (click)="saveLocal()" type="button"\n                        class="canvas_whiteboard_button canvas_whiteboard_button-save">\n                    <i [class]="saveDataButtonClass" aria-hidden="true"></i> {{saveDataButtonText}}\n                </button>\n            </div>\n            <canvas #canvas class="canvas_whiteboard"></canvas>\n            <canvas #incompleteShapesCanvas class="incomplete_shapes_canvas_whiteboard"\n                    (mousedown)="canvasUserEvents($event)" (mouseup)="canvasUserEvents($event)"\n                    (mousemove)="canvasUserEvents($event)" (mouseout)="canvasUserEvents($event)"\n                    (touchstart)="canvasUserEvents($event)" (touchmove)="canvasUserEvents($event)"\n                    (touchend)="canvasUserEvents($event)" (touchcancel)="canvasUserEvents($event)"></canvas>\n        </div>\n    ',styles:[DEFAULT_STYLES]}]}],CanvasWhiteboardComponent.ctorParameters=function(){return[{type:_angular_core.NgZone},{type:_angular_core.ChangeDetectorRef},{type:CanvasWhiteboardService},{type:CanvasWhiteboardShapeService}]},CanvasWhiteboardComponent.propDecorators={options:[{type:_angular_core.Input}],batchUpdateTimeoutDuration:[{type:_angular_core.Input}],imageUrl:[{type:_angular_core.Input}],aspectRatio:[{type:_angular_core.Input}],drawButtonClass:[{type:_angular_core.Input}],clearButtonClass:[{type:_angular_core.Input}],undoButtonClass:[{type:_angular_core.Input}],redoButtonClass:[{type:_angular_core.Input}],saveDataButtonClass:[{type:_angular_core.Input}],drawButtonText:[{type:_angular_core.Input}],clearButtonText:[{type:_angular_core.Input}],undoButtonText:[{type:_angular_core.Input}],redoButtonText:[{type:_angular_core.Input}],saveDataButtonText:[{type:_angular_core.Input}],drawButtonEnabled:[{type:_angular_core.Input}],clearButtonEnabled:[{type:_angular_core.Input}],undoButtonEnabled:[{type:_angular_core.Input}],redoButtonEnabled:[{type:_angular_core.Input}],saveDataButtonEnabled:[{type:_angular_core.Input}],shouldDownloadDrawing:[{type:_angular_core.Input}],colorPickerEnabled:[{type:_angular_core.Input}],lineWidth:[{type:_angular_core.Input}],strokeColor:[{type:_angular_core.Input}],startingColor:[{type:_angular_core.Input}],scaleFactor:[{type:_angular_core.Input}],drawingEnabled:[{type:_angular_core.Input}],showStrokeColorPicker:[{type:_angular_core.Input}],showFillColorPicker:[{type:_angular_core.Input}],downloadedFileName:[{type:_angular_core.Input}],lineJoin:[{type:_angular_core.Input}],lineCap:[{type:_angular_core.Input}],shapeSelectorEnabled:[{type:_angular_core.Input}],showShapeSelector:[{type:_angular_core.Input}],fillColor:[{type:_angular_core.Input}],onClear:[{type:_angular_core.Output}],onUndo:[{type:_angular_core.Output}],onRedo:[{type:_angular_core.Output}],onBatchUpdate:[{type:_angular_core.Output}],onImageLoaded:[{type:_angular_core.Output}],onSave:[{type:_angular_core.Output}],canvas:[{type:_angular_core.ViewChild,args:["canvas"]}],_incompleteShapesCanvas:[{type:_angular_core.ViewChild,args:["incompleteShapesCanvas"]}]};var CanvasWhiteboardShapeSelectorComponent=function(){function CanvasWhiteboardShapeSelectorComponent(_elementRef,_canvasWhiteboardShapeService){this._elementRef=_elementRef,this._canvasWhiteboardShapeService=_canvasWhiteboardShapeService,this.showShapeSelector=!1,this.onToggleShapeSelector=new _angular_core.EventEmitter,this.onShapeSelected=new _angular_core.EventEmitter,this.registeredShapes$=this._canvasWhiteboardShapeService.registeredShapes$}return CanvasWhiteboardShapeSelectorComponent.prototype.selectShape=function(shape){this.onShapeSelected.emit(shape),this.toggleShapeSelector(null)},CanvasWhiteboardShapeSelectorComponent.prototype.closeOnExternalClick=function(event){!this._elementRef.nativeElement.contains(event.target)&&this.showShapeSelector&&this.onToggleShapeSelector.emit(!1)},CanvasWhiteboardShapeSelectorComponent.prototype.toggleShapeSelector=function(event){event&&event.preventDefault(),this.onToggleShapeSelector.emit(!this.showShapeSelector)},CanvasWhiteboardShapeSelectorComponent}();CanvasWhiteboardShapeSelectorComponent.decorators=[{type:_angular_core.Component,args:[{selector:"canvas-whiteboard-shape-selector",host:{"(document:mousedown)":"closeOnExternalClick($event)","(document:touchstart)":"closeOnExternalClick($event)"},template:'\n        <div *ngIf="!showShapeSelector" (click)="toggleShapeSelector($event)"\n             class="canvas-whiteboard-shape-selector-selected-preview">\n            <canvas-whiteboard-shape-preview [shapeConstructor]="selectedShapeConstructor"\n                                             [shapeOptions]="shapeOptions"></canvas-whiteboard-shape-preview>\n        </div>\n        <div class="canvas-whiteboard-shape-selector-wrapper" *ngIf="showShapeSelector">\n            <canvas-whiteboard-shape-preview *ngFor="let shapeConstructor of registeredShapes$ | async"\n                                             [shapeConstructor]="shapeConstructor"\n                                             [shapeOptions]="shapeOptions"\n                                             (click)="selectShape(shapeConstructor)"></canvas-whiteboard-shape-preview>\n        </div>\n    ',styles:["\n        .canvas-whiteboard-shape-selector-selected-preview {\n            vertical-align: bottom;\n            display: inline-block;\n        }\n\n        .canvas-whiteboard-shape-selector-wrapper {\n            display: block;\n            padding: 4px;\n            border: 1px solid #afafaf;\n        }\n\n        @media (min-width: 401px) {\n            .canvas-whiteboard-shape-selector-wrapper {\n            }\n        }\n    "]}]}],CanvasWhiteboardShapeSelectorComponent.ctorParameters=function(){return[{type:_angular_core.ElementRef},{type:CanvasWhiteboardShapeService}]},CanvasWhiteboardShapeSelectorComponent.propDecorators={showShapeSelector:[{type:_angular_core.Input}],selectedShapeConstructor:[{type:_angular_core.Input}],shapeOptions:[{type:_angular_core.Input}],onToggleShapeSelector:[{type:_angular_core.Output}],onShapeSelected:[{type:_angular_core.Output}]};var CanvasWhiteboardColorPickerComponent=function(){function CanvasWhiteboardColorPickerComponent(_elementRef){this._elementRef=_elementRef,this.selectedColor="rgba(0,0,0,1)",this.showColorPicker=!1,this.onToggleColorPicker=new _angular_core.EventEmitter,this.onColorSelected=new _angular_core.EventEmitter,this.onSecondaryColorSelected=new _angular_core.EventEmitter}return CanvasWhiteboardColorPickerComponent.prototype.ngOnInit=function(){this._context=this.canvas.nativeElement.getContext("2d"),this.createColorPalette()},CanvasWhiteboardColorPickerComponent.prototype.createColorPalette=function(){var gradient=this._context.createLinearGradient(0,0,this._context.canvas.width,0);gradient.addColorStop(0,"rgb(255, 0, 0)"),gradient.addColorStop(.15,"rgb(255, 0, 255)"),gradient.addColorStop(.33,"rgb(0, 0, 255)"),gradient.addColorStop(.49,"rgb(0, 255, 255)"),gradient.addColorStop(.67,"rgb(0, 255, 0)"),gradient.addColorStop(.84,"rgb(255, 255, 0)"),gradient.addColorStop(1,"rgb(255, 0, 0)"),this._context.fillStyle=gradient,this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height),gradient=this._context.createLinearGradient(0,0,0,this._context.canvas.height),gradient.addColorStop(0,"rgba(255, 255, 255, 1)"),gradient.addColorStop(.5,"rgba(255, 255, 255, 0)"),gradient.addColorStop(.5,"rgba(0, 0, 0, 0)"),gradient.addColorStop(1,"rgba(0, 0, 0, 1)"),this._context.fillStyle=gradient,this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height)},CanvasWhiteboardColorPickerComponent.prototype.closeOnExternalClick=function(event){!this._elementRef.nativeElement.contains(event.target)&&this.showColorPicker&&this.onToggleColorPicker.emit(!1)},CanvasWhiteboardColorPickerComponent.prototype.toggleColorPicker=function(event){event&&event.preventDefault(),this.onToggleColorPicker.emit(!this.showColorPicker)},CanvasWhiteboardColorPickerComponent.prototype.determineColorFromCanvas=function(event){var canvasRect=this._context.canvas.getBoundingClientRect(),imageData=this._context.getImageData(event.clientX-canvasRect.left,event.clientY-canvasRect.top,1,1);return"rgba("+imageData.data[0]+", "+imageData.data[1]+", "+imageData.data[2]+", "+imageData.data[3]+")"},CanvasWhiteboardColorPickerComponent.prototype.selectColor=function(color){this.onColorSelected.emit(color),this.toggleColorPicker(null)},CanvasWhiteboardColorPickerComponent}();CanvasWhiteboardColorPickerComponent.decorators=[{type:_angular_core.Component,args:[{selector:"canvas-whiteboard-colorpicker",host:{"(document:mousedown)":"closeOnExternalClick($event)","(document:touchstart)":"closeOnExternalClick($event)"},template:'\n        <div [hidden]="showColorPicker" class="canvas-whiteboard-colorpicker-input"\n               (click)="toggleColorPicker($event)">\n               <div class="selected-color-type-wrapper">{{previewText}}</div>\n               <div class="selected-color-preview" [style.background]="selectedColor"></div>\n        </div>\n        <div [hidden]="!showColorPicker" class="canvas-whiteboard-colorpicker-wrapper">\n            <div (click)="selectColor(\'transparent\')" class="transparent-color">Transparent</div>\n            <canvas #canvaswhiteboardcolorpicker class="canvas-whiteboard-colorpicker" width="284" height="155"\n                    (click)="selectColor(determineColorFromCanvas($event))"></canvas>\n        </div>\n    ',styles:["\n        .selected-color-preview {\n            width: 100%;\n            height: 20%;\n            position: absolute;\n            bottom: 0;\n            left: 0;\n        }\n        \n        .selected-color-type-wrapper {\n            display: inline-block;\n            height: 100%;\n            width: 100%;\n            text-align: center;\n            font-size: 14px;\n            color: #000;\n        }\n        \n        .transparent-color {\n            font-size: 14px;\n        }\n        \n        .canvas-whiteboard-colorpicker-wrapper {\n            border: 1px solid #afafaf;\n            color: #000;\n        }\n\n        @media (min-width: 401px) {\n            .canvas-whiteboard-colorpicker-wrapper {\n                position: absolute;\n            }\n        }\n\n        .canvas-whiteboard-colorpicker-input {\n            display: inline-block;\n            position:relative;\n            width: 44px;\n            height: 44px;\n            margin: 5px;\n            cursor: pointer;\n            color: #000;\n        }\n    "]}]}],CanvasWhiteboardColorPickerComponent.ctorParameters=function(){return[{type:_angular_core.ElementRef}]},CanvasWhiteboardColorPickerComponent.propDecorators={previewText:[{type:_angular_core.Input}],selectedColor:[{type:_angular_core.Input}],canvas:[{type:_angular_core.ViewChild,args:["canvaswhiteboardcolorpicker"]}],showColorPicker:[{type:_angular_core.Input}],onToggleColorPicker:[{type:_angular_core.Output}],onColorSelected:[{type:_angular_core.Output}],onSecondaryColorSelected:[{type:_angular_core.Output}]};var CanvasWhiteboardShapePreviewComponent=function(){function CanvasWhiteboardShapePreviewComponent(){}return CanvasWhiteboardShapePreviewComponent.prototype.ngAfterViewInit=function(){this.drawShapePreview()},CanvasWhiteboardShapePreviewComponent.prototype.ngOnChanges=function(changes){(changes.shapeConstructor||changes.shapeOptions)&&this.drawShapePreview()},CanvasWhiteboardShapePreviewComponent.prototype.drawShapePreview=function(){if(this.canvas){var context=this.canvas.nativeElement.getContext("2d");context.clearRect(0,0,context.canvas.width,context.canvas.height);new this.shapeConstructor(new CanvasWhiteboardPoint(0,0),Object.assign(new CanvasWhiteboardShapeOptions,this.shapeOptions)).drawPreview(context)}},CanvasWhiteboardShapePreviewComponent}();CanvasWhiteboardShapePreviewComponent.decorators=[{type:_angular_core.Component,args:[{selector:"canvas-whiteboard-shape-preview",template:'\n        <canvas #canvasWhiteboardShapePreview width="50px" height="50px"\n                class="canvas-whiteboard-shape-preview-canvas"></canvas>\n    ',styles:["\n        .canvas-whiteboard-shape-preview-canvas {\n            cursor: pointer;\n        }\n    "]}]}],CanvasWhiteboardShapePreviewComponent.propDecorators={shapeConstructor:[{type:_angular_core.Input}],shapeOptions:[{type:_angular_core.Input}],canvas:[{type:_angular_core.ViewChild,args:["canvasWhiteboardShapePreview"]}]};var CanvasWhiteboardModule=function(){function CanvasWhiteboardModule(){}return CanvasWhiteboardModule}();CanvasWhiteboardModule.decorators=[{type:_angular_core.NgModule,args:[{imports:[_angular_common.CommonModule],declarations:[CanvasWhiteboardComponent,CanvasWhiteboardColorPickerComponent,CanvasWhiteboardShapeSelectorComponent,CanvasWhiteboardShapePreviewComponent],providers:[CanvasWhiteboardService,CanvasWhiteboardShapeService],exports:[CanvasWhiteboardComponent]}]}],exports.CanvasWhiteboardComponent=CanvasWhiteboardComponent,exports.CanvasWhiteboardUpdate=CanvasWhiteboardUpdate,exports.CanvasWhiteboardService=CanvasWhiteboardService,exports.CanvasWhiteboardPoint=CanvasWhiteboardPoint,exports.CanvasWhiteboardShape=CanvasWhiteboardShape,exports.CanvasWhiteboardShapeOptions=CanvasWhiteboardShapeOptions,exports.CanvasWhiteboardShapeService=CanvasWhiteboardShapeService,exports.RectangleShape=RectangleShape,exports.CircleShape=CircleShape,exports.CanvasWhiteboardShapeSelectorComponent=CanvasWhiteboardShapeSelectorComponent,exports.CanvasWhiteboardColorPickerComponent=CanvasWhiteboardColorPickerComponent,exports.CanvasWhiteboardShapePreviewComponent=CanvasWhiteboardShapePreviewComponent,exports.CanvasWhiteboardModule=CanvasWhiteboardModule,exports.DEFAULT_STYLES=DEFAULT_STYLES,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=ng2-canvas-whiteboard.umd.min.js.map
